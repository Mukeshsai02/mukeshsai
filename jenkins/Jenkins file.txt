pipeline {
   agent any
  
  environment {

      sonar_url = 'http://10.128.0.6:9000'
      sonar_username = 'admin'
      sonar_password = 'admin'
      nexusUrl = '172.31.12.54:8081'
      artifact_version = '0.0.1'

 }

   tools {
      // Install the Maven version configured as "M3" and add it to the path.
	  jdk 'Java8'
      maven "Maven3.3.9"
   }
   
   stages
   {
   stage('git clone') {
         steps {
            // Get some code from a GitHub repository
            git 'https://github.com/164411Prathyusha/Prat-game-of-life.git'
        }
        
        }
	stage ('Compile and Build') {
         steps {
           sh '''
           mvn clean install -U  -Dmaven.test.skip=true 
           '''
         }
	}
	stage ('Sonarqube Analysis'){
           steps {
           withSonarQubeEnv('sonarqube') {
           sh '''
           mvn clean package org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.failure.ignore=false
           mvn -e -B sonar:sonar -Dsonar.java.source=1.8 -Dsonar.host.url="${sonar_url}" -Dsonar.login="${sonar_username}" -Dsonar.password="${sonar_password}" -Dsonar.sourceEncoding=UTF-8
           '''
           }
         }
      }
	stage ('Publishing Artifact') {
	steps {
	nexusArtifactUploader artifacts: [[artifactId:'gameoflife', classifier: '', file: '/var/lib/jenkins/workspace/pipeline-test/gameoflife-build/target/gameoflife-build-1.0-SNAPSHOT.jar', type:'jar', type: 'jar']], credentialsId: '6034c3f9-74dc-4a2e-b894-46957b8a75d8', groupId: 'com.wakaleo.gameoflife', nexusUrl: '172.31.12.54:8081/', nexusVersion: 'nexus3', protocol: 'http', repository: 'hold', version: '4.0.0'
           archiveArtifacts '**/*.jar'
	
	
	}
	}
	   
	     stage ('Docker Build') {
         steps {
	 withAWS(credentials:'jenkins'){
            // withCredentials([usernamePassword(credentialsId: 'JenkinsDeploymentUser', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) 
           sh '''
	   aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 781939683518.dkr.ecr.us-east-2.amazonaws.com
          docker build -t 781939683518.dkr.ecr.us-east-2.amazonaws.com/docker:latest . 
	  
           '''
	   }
         }
	}
	   
	   stage ('Docker image publish to ECR') {
         steps {
           sh '''
	  docker push 781939683518.dkr.ecr.us-east-2.amazonaws.com/docker:latest
	  
           '''
         }
	}
         }
	}


yeswanth git link -https://github.com/yeshwanth14/Test1.git

https://github.com/snehitha-reddy/Game

AWS cred:
------
rcarakat@in.ibm.com


-learn how to generate syntax generation in jenkins
https://github.com/164411Prathyusha/Prat-game-of-life.git

pipeline {
   agent any
  
  environment {

      sonar_url = 'http://10.128.0.6:9000'
      sonar_username = 'admin'
      sonar_password = 'admin'
      nexusUrl = '10.128.0.6:8081'
      artifact_version = '0.0.1'

 }

   tools {
      // Install the Maven version configured as "M3" and add it to the path.
	  jdk 'Java8'
      maven "Maven_3.3.9"
   }
   
   stages
   {
   stage('git clone') {
         steps {
            // Get some code from a GitHub repository
            git branch:'main', url:'https://github.com/164411Prathyusha/Prat-game-of-life.git'
        }
        
        }
	stage ('Compile and Build') {
         steps {
           sh '''
           mvn clean install -U  -Dmaven.test.skip=true 
           '''
           }
    	}
	stage ('Sonarqube Analysis'){
           steps {
           withSonarQubeEnv('sonarqube') {
           sh '''
           mvn clean package org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.failure.ignore=false
           mvn -e -B sonar:sonar -Dsonar.java.source=1.8 -Dsonar.host.url="${sonar_url}" -Dsonar.login="${sonar_username}" -Dsonar.password="${sonar_password}" -Dsonar.sourceEncoding=UTF-8
           '''
                 }
           }
	    }
	    
	    stage ('Publishing Artifact') {
	steps {
	nexusArtifactUploader artifacts: [[artifactId:'gameoflife', classifier: '', file: '/var/lib/jenkins/workspace/firstpipeline/gameoflife-build/target/gameoflife-build-1.0-SNAPSHOT.jar', type:'jar', type: 'jar']], credentialsId: '33e7a578-b459-4beb-b5c7-b7e5ac957e70', groupId: 'com.wakaleo.gameoflife', nexusUrl: '10.128.0.6:8081/', nexusVersion: 'nexus3', protocol: 'http', repository: 'deploy', version: '4.0.0'
           archiveArtifacts '**/*.jar'
	
	
	}
	}
      }
	}

